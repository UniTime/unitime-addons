# UniTime 3.2 (University Timetabling Application)
# Copyright (C) 2010, UniTime LLC
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
#############################################################################

#UniTime Banner Customization
#The following settings are loaded on top of application.properties

#Class name of banner add on database update
tmtbl.db.addon.update.class=org.unitime.banner.commons.hibernate.util.BannerAddOnDatabaseUpdate

#Override default Scheduling Subpart Editing Preference
tmtbl.subpart.credit.editable=false

#Course Number pattern (5 numbers followed by up to two optional letters - the optional letters are not sent back to banner) 
tmtbl.courseNumber.pattern=^[0-9][0-9][0-9][0-9][0-9]([A-Za-z]){0,2}$
tmtbl.courseNumber.patternInfo=Course Number must have 5 numbers followed by up to two optional letters (e.g. 21400, 34200X, 59000AB)

#Enable these properties on a test server
#tmtbl.global.warn=This is a test version of the Timetabling application, no data entered here will be used in production.
#tmtbl.custom.css=styles/test.css
#tmtbl.title=Timetabling TEST

#Database Connection Properties
connection.username=timetable
connection.password=unitime
default_schema=timetable

#Database connection properties (for remote solver)
#  uncomment for Oracle
#connection.driver_class=oracle.jdbc.driver.OracleDriver

#Connection URL 
# uncomment for Oracle and set up to connection URL for your Oracle
#connection.url=jdbc:oracle:thin:@localhost:1521:xe

#Set dialect remote solver servers (default is MySQLInnoDBDialect)
# uncomment for Oracle
#dialect=org.hibernate.dialect.Oracle10gDialect

#Set uniqueId generator for remote solver servers (default is TableHiLoGenerator)
# uncomment for Oracle
#tmtbl.uniqueid.generator=org.hibernate.id.SequenceGenerator

#Exam Naming Convention
#tmtbl.exam.name.maxLength=60
tmtbl.exam.name.Course=%s %c
tmtbl.exam.name.Offering=%s %c
tmtbl.exam.name.Config=%s %c [%x]
tmtbl.exam.name.Class=%s %c %a
tmtbl.exam.name.suffix=
tmtbl.exam.name.sameSubject.Course=; %c
tmtbl.exam.name.sameSubject.Offering=; %c
tmtbl.exam.name.sameSubject.Config=; %c [%x]
tmtbl.exam.name.sameSubject.Class=; %c %a
tmtbl.exam.name.sameCourse.Config=, [%x]
tmtbl.exam.name.sameCourse.Class=, %a
tmtbl.exam.name.sameSubpart.Class=, %a
tmtbl.exam.name.diffSubject.separator=;%_
tmtbl.exam.name.type.Final=Final
tmtbl.exam.name.type.Midterm=Evening

#Exam report properties
#tmtbl.exam.report.roomcode=
tmtbl.exam.report.noroom=INSTR OFFC
tmtbl.exam.report.suffix=true
tmtbl.exam.report.itype=false
tmtbl.exam.report.external=true
tmtbl.exam.report.fullterm.checkdp=false
tmtbl.exam.report.final=FINAL
tmtbl.exam.report.midterm=EVENING
tmtbl.exam.report.external.name=CRN

#Ldap authentication
#tmtbl.authenticate.ldap.provider=
#tmtbl.authenticate.ldap.security=simple
#tmtbl.authenticate.ldap.version=3
#tmtbl.authenticate.ldap.socketFactory=javax.net.ssl.SSLSocketFactory
#tmtbl.authenticate.ldap.ssl.keyStore=%WEB-INF%/../../../common/lib/conf/cacerts
#tmtbl.authenticate.ldap.ssl.trustStore=%WEB-INF%/../../../common/lib/conf/cacerts
#tmtbl.authenticate.ldap.ssl.keyStorePassword=
#tmtbl.authenticate.ldap.ssl.trustStorePassword=
#tmtbl.authenticate.ldap.ssl.trustStoreType=jks
#tmtbl.authenticate.ldap.principal=
#tmtbl.authenticate.ldap.query=
#tmtbl.authenticate.ldap.externalId=

#Translation of external unique ids
#tmtbl.externalUid.translation=

#Ldap for people lookup - if you are using ldap fill in the appropriate information here
#tmtbl.lookup.ldap=
#tmtbl.lookup.ldap.name=
#tmtbl.lookup.ldap.phone=
#tmtbl.lookup.ldap.department=
#tmtbl.lookup.ldap.position=

#Publicly available examination schedule page
#  No-role login is enambled when tmtbl.authentication.norole is true (it leads to personal examination sechedule
#  Message describing what user/password to use
tmtbl.exams.login.message=Note: Use your account credentials to get to your personalized examination schedule.

# Examnation Timetabling: Automatically create following preferences
#  (while an exam is being saved into the database)
# 
# For an exam that is attached to an evening class -> put period preference on a period that overlaps 
# in time and day of week with the class (if not preference is set by the user)
# 
# Final exams --> require appropriate period (overlapping day of week and time) for an evening class 
#   (evening class is a class that takes place after 6pm, defined by firstEveningPeriod -- number of 5-minute long time slots from midnight)
#   (preference: R for required, -2 strongly preferred, -1 preferred, 0 rule disabled, 1 discouraged, 2 strongly discouraged, P prohibited)   
tmtbl.exam.defaultPrefs.final.eveningClasses.pref=R
tmtbl.exam.defaultPrefs.final.eveningClasses.firstEveningPeriod=216
#
# Evening exams --> rule disabled
tmtbl.exam.defaultPrefs.midterm.eveningClasses.pref=0
tmtbl.exam.defaultPrefs.midterm.eveningClasses.firstEveningPeriod=216
#
# For an exam that is attached to a class -> put room preference on a room (if it allows exams) of the class
# Final exams -> strongly prefer original room (room where the class is placed) 
tmtbl.exam.defaultPrefs.final.originalRoom.pref=-2
# Midterm exams -> rule disabled
tmtbl.exam.defaultPrefs.midterm.originalRoom.pref=0

# Propeties for connecting to Banner - 
#banner.host=
#banner.database=
#banner.user=
#banner.password=
#banner.port=

# Property to define the class that is called when a instructional offering config is added/changed.
tmtbl.external.instr_offr_config.change_action.class=org.unitime.banner.util.BannerInstrOffrConfigChangeAction
# Property to define the class that is called when an instructional offering is added.
tmtbl.external.instr_offr.add_action.class=org.unitime.banner.util.BannerChangeAction
# Property to define the class that is called when an instructional offering is deleted.
tmtbl.external.instr_offr.delete_action.class=org.unitime.banner.util.BannerChangeAction
# Property to define the class that is called when an instructional offering is made not offered.
tmtbl.external.instr_offr.not_offered_action.class=org.unitime.banner.util.BannerChangeAction
# Property to define the class that is called when an instructional offering is made offered.
tmtbl.external.instr_offr.offered_action.class=org.unitime.banner.util.BannerChangeAction
# Property to define the class that is called when an instructional offering crosslisting is changed.
tmtbl.external.instr_offr.crosslist_action.class=org.unitime.banner.util.BannerChangeAction
# Property to define the class that is called at the end of the course offering edit action
tmtbl.external.course_offering.remove_action.class=org.unitime.banner.util.BannerChangeAction
# Property to define the class that is called when a course offering is deleted
tmtbl.external.course_offering.edit_action.class=org.unitime.banner.util.BannerChangeAction
# Property to define the class that is called at the end of the assign instructors action
tmtbl.external.instr_offr_config.assign_instructors_action.class=org.unitime.banner.util.BannerChangeAction
# Property to define the class that is called at the end of the edit scheduling subpart action
tmtbl.external.sched_subpart.edit_action.class=org.unitime.banner.util.BannerChangeAction
# Property to define the class that is called at the end of the edit class action
tmtbl.external.class.edit_action.class=org.unitime.banner.util.BannerChangeAction
# Property to define the class that is called at the end of the edit reservation action
tmtbl.external.reservation.edit_action.class=org.unitime.banner.util.BannerChangeAction
# Property to define the class that is called when a solution is committed or uncommited
tmtbl.external.solution.commit_action.class=org.unitime.banner.util.BannerChangeAction
# Property to define the class that is called when a solution is committed or uncommited
tmtbl.external.instr_offr_in_crosslist.add_action.class=org.unitime.banner.util.BannerChangeAction

# Property to define stored procedure that is called to get new banner section identifier
# mysql version
banner.section_id.generator={?= call get_section(?,?,?)}
# oracle version
#banner.section_id.generator={?= call section_processor.get_section(?,?,?)}

# Property to define stored procedure that is called to get new banner croslist identifier
# mysql version
banner.crosslist_id.generator={?= call get_cross_list_id(?)}
# oracle version
#banner.crosslist_id.generator={?= call cross_list_processor.get_cross_list_id(?)}

# Property to define stored procedure that is called to validate a section index is unique for a course
# mysql version
banner.section_id.validator={?= call section_exists(?,?,?,?)}
# oracle version
#banner.section_id.validator={?= call sys.diutil.bool_to_int(section_processor.section_exists(?,?,?,?))}

# Property to define stored procedure that is called to get new banner crn
# mysql version
banner.crn.generator={call get_crn(?, ?)}
# oracle version
#banner.crn.generator={? = call crn_processor.get_crn(?)}

# Property to define stored procedure that is called to get new banner link identifier
# mysql version
banner.link_id.generator={?= call get_link_identifier(?,?,?)}
# oracle version
#banner.link_id.generator={?= call section_processor.get_link_identifier(?,?,?)}

#If you are using UniTime in conjunction with an external system that identifies classes differently than UniTime
#   you can create a java class that implements the ExternalClassNameHelperInterface interface to create custom
#   naming for the class that is displayed in places such as the personal exam schedule and personal class 
#   schedule for students.  If this is not set org.unitime.timetable.util.DefaultExternalClassNameHelper is used
tmtbl.class.naming.helper=org.unitime.banner.util.BannerExternalClassNameHelper

#If Banner Messages are used to keep student enrollments up to date in real time the following parameters are 
#   used to do some basic validation in the messages.  If these values are not set the validation will not
#   be done.
#banner.messaging.expected.datasource=
#banner.messaging.expected.source=

# Banner extension of the session restore
unitime.session_restore.class=org.unitime.banner.util.BannerSessionRestore